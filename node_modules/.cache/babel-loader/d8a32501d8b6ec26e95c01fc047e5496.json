{"ast":null,"code":"import { createStore } from 'redux';\nimport { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nconst slice = createSlice({\n  name: 'counter',\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.payload; //have to use this name\n    },\n\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n}); // const store = createStore(slice.reducer);\n// or\n\nconst store = configureStore({\n  reducer: slice.reducer\n});\nexport const counterAction = slice.actions; // const counterReducer = (state = initialState, action) => {\n//     if(action.type === 'increment') {\n//         return{\n//             counter:state.counter + 1,\n//             showCounter:state.showCounter\n//         }\n//     }\n//     if(action.type === 'increase') {\n//         return{\n//             counter:state.counter + action.amount,\n//             showCounter:state.showCounter\n//         }\n//     }\n//     if(action.type === 'decrement') {\n//         return {\n//             counter:state.counter - 1,\n//             showCounter:state.showCounter\n//         }\n//     }\n//     if (action.type === 'toggle') {\n//         return {\n//             showCounter: !state.showCounter,\n//             counter: state.counter\n//         }\n//     }\n//     return state;\n// }\n// const store = createStore(counterReducer);\n\nexport default store;","map":{"version":3,"sources":["/Users/vietqnguyen/Desktop/React/13-redux-project/src/store/index.js"],"names":["createStore","createSlice","configureStore","initialState","counter","showCounter","slice","name","reducers","increment","state","decrement","increase","action","payload","toggleCounter","store","reducer","counterAction","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AACA,MAAMC,YAAY,GAAG;AAACC,EAAAA,OAAO,EAAC,CAAT;AAAYC,EAAAA,WAAW,EAAE;AAAzB,CAArB;AAEA,MAAMC,KAAK,GAAGL,WAAW,CAAC;AACtBM,EAAAA,IAAI,EAAE,SADgB;AAEtBJ,EAAAA,YAFsB;AAGtBK,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AACbA,MAAAA,KAAK,CAACN,OAAN;AACH,KAHK;;AAINO,IAAAA,SAAS,CAACD,KAAD,EAAQ;AACbA,MAAAA,KAAK,CAACN,OAAN;AACH,KANK;;AAONQ,IAAAA,QAAQ,CAACF,KAAD,EAAQG,MAAR,EAAgB;AACpBH,MAAAA,KAAK,CAACN,OAAN,GAAgBM,KAAK,CAACN,OAAN,GAAgBS,MAAM,CAACC,OAAvC,CADoB,CAC4B;AACnD,KATK;;AAUNC,IAAAA,aAAa,CAACL,KAAD,EAAQ;AACjBA,MAAAA,KAAK,CAACL,WAAN,GAAoB,CAACK,KAAK,CAACL,WAA3B;AACH;;AAZK;AAHY,CAAD,CAAzB,C,CAmBA;AACA;;AAEA,MAAMW,KAAK,GAAGd,cAAc,CAAC;AACzBe,EAAAA,OAAO,EAAEX,KAAK,CAACW;AADU,CAAD,CAA5B;AAIA,OAAO,MAAMC,aAAa,GAAGZ,KAAK,CAACa,OAA5B,C,CACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;;AAEA,eAAeH,KAAf","sourcesContent":["import { createStore } from 'redux';\nimport { createSlice, configureStore } from '@reduxjs/toolkit'\nconst initialState = {counter:0, showCounter: true};\n\nconst slice = createSlice({\n    name: 'counter',\n    initialState,\n    reducers: {\n        increment(state) {\n            state.counter++;\n        },\n        decrement(state) {\n            state.counter--\n        },\n        increase(state, action) {\n            state.counter = state.counter + action.payload; //have to use this name\n        },\n        toggleCounter(state) {\n            state.showCounter = !state.showCounter;\n        }\n    }\n})\n\n// const store = createStore(slice.reducer);\n// or\n\nconst store = configureStore({\n    reducer: slice.reducer\n});\n\nexport const counterAction = slice.actions;\n// const counterReducer = (state = initialState, action) => {\n//     if(action.type === 'increment') {\n//         return{\n//             counter:state.counter + 1,\n//             showCounter:state.showCounter\n//         }\n//     }\n//     if(action.type === 'increase') {\n//         return{\n//             counter:state.counter + action.amount,\n//             showCounter:state.showCounter\n//         }\n//     }\n//     if(action.type === 'decrement') {\n//         return {\n//             counter:state.counter - 1,\n//             showCounter:state.showCounter\n//         }\n//     }\n//     if (action.type === 'toggle') {\n//         return {\n//             showCounter: !state.showCounter,\n//             counter: state.counter\n//         }\n//     }\n\n//     return state;\n// }\n\n// const store = createStore(counterReducer);\n\nexport default store;"]},"metadata":{},"sourceType":"module"}